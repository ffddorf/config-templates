{# j2lint: disable=jinja-statements-delimiter #}
{# j2lint: disable=jinja-statements-indentation #}
{# j2lint: disable=single-statement-per-line #}

{% if device is not defined and device_id is defined %}
{% set device = dcim.Device.objects.get(pk=device_id) %}
{% endif %}

{# Tunnels #}
{%- for intf in device.interfaces.filter(name__startswith='tun') %}

{%- with term = intf.tunnel_terminations.first() %}
{%- if term %}

{%- with remote = term.tunnel.terminations.exclude(termination_id=intf.id).first() %}
{%- if remote %}

{%- if intf.description != '' %}
set interfaces tunnel {{ intf.name }} description "{{ intf.description }}"
{%- endif %}

{%- for addr in intf.ip_addresses.all() %}
set interfaces tunnel {{ intf.name }} address {{ addr.address }}
{%- endfor %}
set interfaces tunnel {{ intf.name }} encapsulation {{ term.tunnel.encapsulation }}
set interfaces tunnel {{ intf.name }} multicast disable
set interfaces tunnel {{ intf.name }} local-ip {{ term.outside_ip.address | ipaddr('address') }}

{%- with remote_ip = ipam.IPAddress.objects.filter(nat_inside_id=remote.outside_ip.id).first() or remote.outside_ip %}
set interfaces tunnel {{ intf.name }} remote-ip {{ remote_ip.address | ipaddr('address') }}
{%- endwith %}

{%- endif %}
{%- endwith %}

{%- endif %}
{%- endwith %}

{%- endfor %}

{# static interface routes #}
delete protocols static interface-route
{%- for intf in device.interfaces.filter(untagged_vlan__isnull=False) %}
{%- for pfx in ipam.Prefix.objects.filter(vlan_id=intf.untagged_vlan_id) %}
{%- if pfx.custom_field_data.get('use_interface_route', False) %}
set protocols static interface-route {{ pfx.prefix }} next-hop-interface {{ intf.name }}
{%- if pfx.description %} description "{{ pfx.description }}"{% endif %}
{%- endif %}
{%- endfor %}
{%- endfor %}

{# BGP sessions #}
{%- for sess in netbox_bgp.BGPSession.objects.filter(device_id=device.id) %}
set protocols bgp {{ sess.local_as.asn }} neighbor {{ sess.remote_address.address | ipaddr('address') }}
{%- endfor %}